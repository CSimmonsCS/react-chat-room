{"ast":null,"code":"import _objectSpread from \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/SignIn/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\nimport google from \"./google.png\";\nimport facebook from \"./facebook.png\";\nimport twitter from \"./twitter.png\";\n\nconst SignInPage = () => React.createElement(\"div\", {\n  className: \"sign-in\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Sign In\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(SignInGoogle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(SignInFacebook, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(SignInTwitter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(PasswordForgetLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}));\n\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/account-exists-with-different-credential\";\nconst ERROR_MSG_ACCOUNT_EXISTS = `\nAn account with an E-Mail address to\nthis social account already exists. Try to login from this account instead and associate your social accounts on your personal account page.\n`;\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n    const isInvalid = password === \"\" || email === \"\";\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithGoogle().then(socialAuthUser => {\n        //create a user in your firebase realtime db //\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {}\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/home\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"google-signin\",\n      src: google,\n      alt: \"Sign In With Google\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithFacebook().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {}\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/home\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"facebook-signin\",\n      src: facebook,\n      alt: \"Sign In With Facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      this.props.firebase.doSignInWithTwitter().then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {}\n        });\n      }).then(() => {\n        this.setState({\n          error: null\n        });\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      error: null\n    };\n  }\n\n  render() {\n    const error = this.state.error;\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/home\",\n      className: \"btn btn-block btn-social btn-twitter\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \" Sign in with Twitter\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nconst SignInGoogle = compose(withRouter, withFirebase)(SignInGoogleBase);\nconst SignInFacebook = compose(withRouter, withFirebase)(SignInFacebookBase);\nconst SignInTwitter = compose(withRouter, withFirebase)(SignInTwitterBase);\nexport default SignInPage;\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };","map":{"version":3,"sources":["/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","PasswordForgetLink","withFirebase","ROUTES","google","facebook","twitter","SignInPage","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","user","uid","set","username","displayName","roles","code","SignInFacebookBase","doSignInWithFacebook","additionalUserInfo","profile","SignInTwitterBase","doSignInWithTwitter","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"recompose\";\n\nimport { SignUpLink } from \"../SignUp\";\nimport { PasswordForgetLink } from \"../PasswordForget\";\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nimport google from \"./google.png\";\nimport facebook from \"./facebook.png\";\nimport twitter from \"./twitter.png\";\n\nconst SignInPage = () => (\n  <div className=\"sign-in\">\n    <h1>Sign In</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  \"auth/account-exists-with-different-credential\";\nconst ERROR_MSG_ACCOUNT_EXISTS = `\nAn account with an E-Mail address to\nthis social account already exists. Try to login from this account instead and associate your social accounts on your personal account page.\n`;\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        //create a user in your firebase realtime db //\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {}\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <a href=\"/home\" type=\"submit\">\n          <img id=\"google-signin\" src={google} alt=\"Sign In With Google\" />\n        </a>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {}\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <a href=\"/home\" type=\"submit\">\n          <img\n            id=\"facebook-signin\"\n            src={facebook}\n            alt=\"Sign In With Facebook\"\n          />\n        </a>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: {}\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <a\n          href=\"/home\"\n          className=\"btn btn-block btn-social btn-twitter\"\n          type=\"submit\"\n        >\n          <i className=\"fa fa-twitter\"></i> Sign in with Twitter\n        </a>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n"]},"metadata":{},"sourceType":"module"}