{"ast":null,"code":"var _jsxFileName = \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Session/withEmailVerification.js\";\nimport React from \"react\";\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.onSendEmailVerification = () => {\n        this.props.firebase.doSendEmailVerification().then(() => this.setState({\n          isSent: true\n        }));\n      };\n\n      this.state = {\n        isSent: false\n      };\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, authUser => needsEmailVerification(authUser) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.state.isSent ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"E-Mail confirmation sent: Check you E-Mails (Spam folder included) for a confirmation E-Mail. Refresh this page once you confirmed your E-Mail.\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Verify your E-Mail: Check you E-Mails (Spam folder included) for a confirmation E-Mail or send another confirmation E-Mail.\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.onSendEmailVerification,\n        disabled: this.state.isSent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Send confirmation E-Mail\")) : React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nconst needsEmailVerification = authUser => authUser && !authUser.emailVerified && authUser.providerData.map(provider => provider.providerId).includes(\"password\");\n\nexport default withEmailVerification;","map":{"version":3,"sources":["/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Session/withEmailVerification.js"],"names":["React","AuthUserContext","withFirebase","withEmailVerification","Component","WithEmailVerification","constructor","props","onSendEmailVerification","firebase","doSendEmailVerification","then","setState","isSent","state","render","authUser","needsEmailVerification","emailVerified","providerData","map","provider","providerId","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,qBAAqB,GAAGC,SAAS,IAAI;AACzC,QAAMC,qBAAN,SAAoCL,KAAK,CAACI,SAA1C,CAAoD;AAClDE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;;AADiB,WAMnBC,uBANmB,GAMO,MAAM;AAC9B,aAAKD,KAAL,CAAWE,QAAX,CACGC,uBADH,GAEGC,IAFH,CAEQ,MAAM,KAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAd,CAFd;AAGD,OAVkB;;AAGjB,WAAKC,KAAL,GAAa;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAb;AACD;;AAQDE,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,QAAQ,IACPC,sBAAsB,CAACD,QAAD,CAAtB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWD,MAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIARJ,EAcE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,KAAKL,uBAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWD,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAdF,CADF,GAwBE,oBAAC,SAAD,oBAAe,KAAKN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA1BN,CADF;AAgCD;;AA9CiD;;AAiDpD,SAAOL,YAAY,CAACG,qBAAD,CAAnB;AACD,CAnDD;;AAqDA,MAAMY,sBAAsB,GAAGD,QAAQ,IACrCA,QAAQ,IACR,CAACA,QAAQ,CAACE,aADV,IAEAF,QAAQ,CAACG,YAAT,CACGC,GADH,CACOC,QAAQ,IAAIA,QAAQ,CAACC,UAD5B,EAEGC,QAFH,CAEY,UAFZ,CAHF;;AAOA,eAAepB,qBAAf","sourcesContent":["import React from \"react\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check you E-Mails (Spam folder\n                    included) for a confirmation E-Mail. Refresh this page once\n                    you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check you E-Mails (Spam folder included)\n                    for a confirmation E-Mail or send another confirmation\n                    E-Mail.\n                  </p>\n                )}\n                <button\n                  type=\"button\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Send confirmation E-Mail\n                </button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes(\"password\");\n\nexport default withEmailVerification;\n"]},"metadata":{},"sourceType":"module"}