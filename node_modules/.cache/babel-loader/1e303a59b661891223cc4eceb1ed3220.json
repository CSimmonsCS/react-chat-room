{"ast":null,"code":"import _objectSpread from \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Home/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  className: \"home\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Home\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"The Home Page is accessible by every signed in user.\"), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Messages\"), React.createElement(Messages, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}));\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeText = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.onCreateMessage = (event, authUser) => {\n      this.props.firebase.messages().push({\n        text: this.state.text,\n        userId: authUser.uid,\n        createdAt: this.props.firebase.serverValue.TIMESTAMP\n      });\n      this.setState({\n        text: \"\"\n      });\n      event.preventDefault();\n    };\n\n    this.onRemoveMessage = uid => {\n      this.props.firebase.message(uid).remove();\n    };\n\n    this.onEditMessage = (message, text) => {\n      const uid = message.uid,\n            messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text,\n        editedAt: this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    this.onNextPage = () => {\n      this.setState(state => ({\n        limit: state.limit + 5\n      }), this.onListenForMessages);\n    };\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      messages: [],\n      limit: 5\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.messages().orderByChild(\"createdAt\").limitToLast(this.state.limit).on(\"value\", snapshot => {\n      const messageObject = snapshot.val(); //convert messages list from snapshot\n\n      if (messageObject) {\n        const messageList = Object.keys(messageObject).map(key => _objectSpread({}, messageObject[key], {\n          uid: key\n        }));\n        this.setState({\n          messages: messageList,\n          loading: false\n        });\n      } else {\n        this.setState({\n          messages: null,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n    return React.createElement(AuthUserContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, authUser => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, !loading && messages && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Previous\"), loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Loading...\"), messages ? React.createElement(MessageList, {\n      authUser: authUser,\n      messages: messages,\n      onEditMessage: this.onEditMessage,\n      onRemoveMessage: this.onRemoveMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"There are no messages ...\"), React.createElement(\"form\", {\n      onSubmit: event => this.onCreateMessage(event, authUser),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: this.onChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n\n}\n\nconst Messages = withFirebase(MessagesBase);\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onEditMessage,\n  onRemoveMessage\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, messages.map(message => React.createElement(MessageItem, {\n  authUser: authUser,\n  key: message.uid,\n  message: message,\n  onEditMessage: onEditMessage,\n  onRemoveMessage: onRemoveMessage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n})));\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleEditMode = () => {\n      this.setState(state => ({\n        editMode: !state.editMode,\n        editText: this.props.message.text\n      }));\n    };\n\n    this.onChangeEditText = event => {\n      this.setState({\n        editText: event.target.value\n      });\n    };\n\n    this.onSaveEditText = () => {\n      this.props.onEditMessage(this.props.message, this.state.editText);\n      this.setState({\n        editMode: false\n      });\n    };\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          authUser = _this$props.authUser,\n          message = _this$props.message,\n          onRemoveMessage = _this$props.onRemoveMessage;\n    const _this$state2 = this.state,\n          editMode = _this$state2.editMode,\n          editText = _this$state2.editText;\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, editMode ? React.createElement(\"input\", {\n      type: \"text\",\n      value: editText,\n      onChange: this.onChangeEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, message.userId), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"(Edited)\")), authUser.uid === message.userId && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, editMode ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSaveEditText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Reset\")) : React.createElement(\"button\", {\n      onClick: this.onToggleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Edit\"), !editMode && React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onRemoveMessage(message.uid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst condition = authUser => !!authUser; //!= null\n\n\nexport default compose(withEmailVerification, withAuthorization(condition))(HomePage);","map":{"version":3,"sources":["/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Home/index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","HomePage","MessagesBase","constructor","props","onChangeText","event","setState","text","target","value","onCreateMessage","authUser","firebase","messages","push","state","userId","uid","createdAt","serverValue","TIMESTAMP","preventDefault","onRemoveMessage","message","remove","onEditMessage","messageSnapshot","set","editedAt","onNextPage","limit","onListenForMessages","loading","componentDidMount","orderByChild","limitToLast","on","snapshot","messageObject","val","messageList","Object","keys","map","key","componentWillUnmount","off","render","Messages","MessageList","MessageItem","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst HomePage = () => (\n  <div className=\"home\">\n    <h1>Home</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n\n    <hr />\n    <h3>Messages</h3>\n    <Messages />\n  </div>\n);\n\nclass MessagesBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      loading: false,\n      messages: [],\n      limit: 5\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages() {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild(\"createdAt\")\n      .limitToLast(this.state.limit)\n      .on(\"value\", snapshot => {\n        const messageObject = snapshot.val();\n\n        //convert messages list from snapshot\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key\n          }));\n          this.setState({ messages: messageList, loading: false });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n\n    this.setState({ text: \"\" });\n\n    event.preventDefault();\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP\n    });\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages\n    );\n  };\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <button type=\"button\" onClick={this.onNextPage}>\n                Previous\n              </button>\n            )}\n\n            {loading && <div>Loading...</div>}\n\n            {messages ? (\n              <MessageList\n                authUser={authUser}\n                messages={messages}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            ) : (\n              <div>There are no messages ...</div>\n            )}\n\n            <form onSubmit={event => this.onCreateMessage(event, authUser)}>\n              <input type=\"text\" value={text} onChange={this.onChangeText} />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nconst Messages = withFirebase(MessagesBase);\n\nconst MessageList = ({\n  authUser,\n  messages,\n  onEditMessage,\n  onRemoveMessage\n}) => (\n  <ul>\n    {messages.map(message => (\n      <MessageItem\n        authUser={authUser}\n        key={message.uid}\n        message={message}\n        onEditMessage={onEditMessage}\n        onRemoveMessage={onRemoveMessage}\n      />\n    ))}\n  </ul>\n);\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.userId}</strong> {message.text}\n            {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n        {authUser.uid === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <button onClick={this.onSaveEditText}>Save</button>\n                <button onClick={this.onToggleEditMode}>Reset</button>\n              </span>\n            ) : (\n              <button onClick={this.onToggleEditMode}>Edit</button>\n            )}\n\n            {!editMode && (\n              <button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\nconst condition = authUser => !!authUser; //!= null\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition)\n)(HomePage);\n"]},"metadata":{},"sourceType":"module"}