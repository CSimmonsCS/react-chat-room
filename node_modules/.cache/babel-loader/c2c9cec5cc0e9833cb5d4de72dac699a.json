{"ast":null,"code":"var _jsxFileName = \"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Account/index.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"recompose\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\nimport { AuthUserContext, withAuthorization, withEmailVerification } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\nconst SIGN_IN_METHODS = [{\n  id: \"password\",\n  provider: null\n}, {\n  id: \"google.com\",\n  provider: \"googleProvider\"\n}, {\n  id: \"facebook.com\",\n  provider: \"facebookProvider\"\n}, {\n  id: \"twitter.com\",\n  provider: \"twitterProvider\"\n}];\n\nconst AccountPage = () => React.createElement(AuthUserContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, authUser => React.createElement(\"div\", {\n  className: \"account\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \"Account: \", authUser.email), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Password Reset\"), React.createElement(PasswordForgetForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Password Change\"), React.createElement(PasswordChangeForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"Social Sign In Methods\"), React.createElement(LoginManagement, {\n  authUser: authUser,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})));\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDefaultLoginLink = password => {\n      const credential = this.props.firebase.emailAuthProvider.credential(this.props.authUser.email, password);\n      this.props.firebase.auth.currentUser.linkWithCredential(credential).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.fetchSignInMethods = () => {\n      this.props.firebase.auth.fetchSignInMethodsForEmail(this.props.authUser.email).then(activeSignInMethods => this.setState({\n        activeSignInMethods,\n        error: null\n      })).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onSocialLoginLink = provider => {\n      this.props.firebase.auth.currentUser.linkWithPopup(this.props.firebase[provider]).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.onUnlink = providerId => {\n      this.props.firebase.auth.currentUser.unlink(providerId).then(this.fetchSignInMethods).catch(error => this.setState({\n        error\n      }));\n    };\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  render() {\n    const _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      className: \"social-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, SIGN_IN_METHODS.map(signInMethod => {\n      const onlyOneLeft = activeSignInMethods.length === 1;\n      const isEnabled = activeSignInMethods.includes(signInMethod.id);\n      return React.createElement(\"li\", {\n        key: signInMethod.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, signInMethod.id === \"password\" ? React.createElement(DefaultLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onDefaultLoginLink,\n        onUnlink: this.onUnlink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }) : React.createElement(SocialLoginToggle, {\n        onlyOneLeft: onlyOneLeft,\n        isEnabled: isEnabled,\n        signInMethod: signInMethod,\n        onLink: this.onSocialLoginLink,\n        onUnlink: this.onUnlink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    })), error && error.message);\n  }\n\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) => isEnabled ? React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onUnlink(signInMethod.id),\n  disabled: onlyOneLeft,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}, \"Deactivate \", signInMethod.id) : React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => onLink(signInMethod.provider),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, \"Link \", signInMethod.id);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onLink(this.state.passwordOne);\n      this.setState({\n        passwordOne: \"\",\n        passwordTwo: \"\"\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      passwordOne: \"\",\n      passwordTwo: \"\"\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          onlyOneLeft = _this$props.onlyOneLeft,\n          isEnabled = _this$props.isEnabled,\n          signInMethod = _this$props.signInMethod,\n          onUnlink = _this$props.onUnlink;\n    const _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n    return isEnabled ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => onUnlink(signInMethod.id),\n      disabled: onlyOneLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }) : React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" \", React.createElement(\"input\", {\n      name: \"passwordOne\",\n      value: passwordOne,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"passwordTwo\",\n      value: passwordTwo,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Link \", signInMethod.id));\n  }\n\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Account/index.js"],"names":["React","Component","compose","PasswordForgetForm","PasswordChangeForm","AuthUserContext","withAuthorization","withEmailVerification","withFirebase","SIGN_IN_METHODS","id","provider","AccountPage","authUser","email","LoginManagementBase","constructor","props","onDefaultLoginLink","password","credential","firebase","emailAuthProvider","auth","currentUser","linkWithCredential","then","fetchSignInMethods","catch","error","setState","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onUnlink","providerId","unlink","state","componentDidMount","render","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","condition"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"recompose\";\n\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification\n} from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nconst SIGN_IN_METHODS = [\n  {\n    id: \"password\",\n    provider: null\n  },\n  {\n    id: \"google.com\",\n    provider: \"googleProvider\"\n  },\n  {\n    id: \"facebook.com\",\n    provider: \"facebookProvider\"\n  },\n  {\n    id: \"twitter.com\",\n    provider: \"twitterProvider\"\n  }\n];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div className=\"account\">\n        <h1>Account: {authUser.email}</h1>\n        <hr />\n        <h3>Password Reset</h3>\n        <PasswordForgetForm />\n        <h3>Password Change</h3>\n        <PasswordChangeForm />\n        <h3>Social Sign In Methods</h3>\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n  }\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password\n    );\n    this.props.firebase.auth.currentUser\n      .linkWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n      .then(activeSignInMethods =>\n        this.setState({ activeSignInMethods, error: null })\n      )\n      .catch(error => this.setState({ error }));\n  };\n\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n\n    return (\n      <div className=\"social-login\">\n        <ul>\n          {SIGN_IN_METHODS.map(signInMethod => {\n            const onlyOneLeft = activeSignInMethods.length === 1;\n            const isEnabled = activeSignInMethods.includes(signInMethod.id);\n            return (\n              <li key={signInMethod.id}>\n                {signInMethod.id === \"password\" ? (\n                  <DefaultLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onDefaultLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                ) : (\n                  <SocialLoginToggle\n                    onlyOneLeft={onlyOneLeft}\n                    isEnabled={isEnabled}\n                    signInMethod={signInMethod}\n                    onLink={this.onSocialLoginLink}\n                    onUnlink={this.onUnlink}\n                  />\n                )}\n              </li>\n            );\n          })}\n        </ul>\n        {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n  onlyOneLeft,\n  isEnabled,\n  signInMethod,\n  onLink,\n  onUnlink\n}) =>\n  isEnabled ? (\n    <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n    >\n      Deactivate {signInMethod.id}\n    </button>\n  ) : (\n    <button type=\"button\" onClick={() => onLink(signInMethod.provider)}>\n      Link {signInMethod.id}\n    </button>\n  );\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { passwordOne: \"\", passwordTwo: \"\" };\n  }\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: \"\", passwordTwo: \"\" });\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { onlyOneLeft, isEnabled, signInMethod, onUnlink } = this.props;\n    const { passwordOne, passwordTwo } = this.state;\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n    return isEnabled ? (\n      <button\n        type=\"button\"\n        onClick={() => onUnlink(signInMethod.id)}\n        disabled={onlyOneLeft}\n      ></button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        {\" \"}\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition)\n)(AccountPage);\n"]},"metadata":{},"sourceType":"module"}