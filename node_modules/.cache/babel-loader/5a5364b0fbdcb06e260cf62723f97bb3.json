{"ast":null,"code":"import _classCallCheck from\"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import AuthUserContext from\"./context\";import{withFirebase}from\"../Firebase\";var withEmailVerification=function withEmailVerification(Component){var WithEmailVerification=/*#__PURE__*/function(_React$Component){_inherits(WithEmailVerification,_React$Component);function WithEmailVerification(props){var _this;_classCallCheck(this,WithEmailVerification);_this=_possibleConstructorReturn(this,_getPrototypeOf(WithEmailVerification).call(this,props));_this.onSendEmailVerification=function(){_this.props.firebase.doSendEmailVerification().then(function(){return _this.setState({isSent:true});});};_this.state={isSent:false};return _this;}_createClass(WithEmailVerification,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(AuthUserContext.Consumer,null,function(authUser){return needsEmailVerification(authUser)?React.createElement(\"div\",null,_this2.state.isSent?React.createElement(\"p\",null,\"E-Mail confirmation sent: Check you E-Mails (Spam folder included) for a confirmation E-Mail. Refresh this page once you confirmed your E-Mail.\"):React.createElement(\"p\",null,\"Verify your E-Mail: Check you E-Mails (Spam folder included) for a confirmation E-Mail or send another confirmation E-Mail.\"),React.createElement(\"button\",{type:\"button\",onClick:_this2.onSendEmailVerification,disabled:_this2.state.isSent},\"Send confirmation E-Mail\")):React.createElement(Component,_this2.props);});}}]);return WithEmailVerification;}(React.Component);return withFirebase(WithEmailVerification);};var needsEmailVerification=function needsEmailVerification(authUser){return authUser&&!authUser.emailVerified&&authUser.providerData.map(function(provider){return provider.providerId;}).includes(\"password\");};export default withEmailVerification;","map":{"version":3,"sources":["/Users/cdot/Desktop/Road To React book projects/reactWithFirebase/react-firebase-authentication/src/components/Session/withEmailVerification.js"],"names":["React","AuthUserContext","withFirebase","withEmailVerification","Component","WithEmailVerification","props","onSendEmailVerification","firebase","doSendEmailVerification","then","setState","isSent","state","authUser","needsEmailVerification","emailVerified","providerData","map","provider","providerId","includes"],"mappings":"4jCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,WAA5B,CACA,OAASC,YAAT,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAC,SAAS,CAAI,IACnCC,CAAAA,qBADmC,2FAEvC,+BAAYC,KAAZ,CAAmB,uDACjB,uFAAMA,KAAN,GADiB,MAMnBC,uBANmB,CAMO,UAAM,CAC9B,MAAKD,KAAL,CAAWE,QAAX,CACGC,uBADH,GAEGC,IAFH,CAEQ,iBAAM,OAAKC,QAAL,CAAc,CAAEC,MAAM,CAAE,IAAV,CAAd,CAAN,EAFR,EAGD,CAVkB,CAGjB,MAAKC,KAAL,CAAa,CAAED,MAAM,CAAE,KAAV,CAAb,CAHiB,aAIlB,CANsC,yEAc9B,iBACP,MACE,qBAAC,eAAD,CAAiB,QAAjB,MACG,SAAAE,QAAQ,QACPC,CAAAA,sBAAsB,CAACD,QAAD,CAAtB,CACE,+BACG,MAAI,CAACD,KAAL,CAAWD,MAAX,CACC,+KADD,CAOC,2JARJ,CAcE,8BACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,MAAI,CAACL,uBAFhB,CAGE,QAAQ,CAAE,MAAI,CAACM,KAAL,CAAWD,MAHvB,6BAdF,CADF,CAwBE,oBAAC,SAAD,CAAe,MAAI,CAACN,KAApB,CAzBK,EADX,CADF,CAgCD,CA/CsC,mCACLN,KAAK,CAACI,SADD,EAkDzC,MAAOF,CAAAA,YAAY,CAACG,qBAAD,CAAnB,CACD,CAnDD,CAqDA,GAAMU,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAD,QAAQ,QACrCA,CAAAA,QAAQ,EACR,CAACA,QAAQ,CAACE,aADV,EAEAF,QAAQ,CAACG,YAAT,CACGC,GADH,CACO,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,UAAb,EADf,EAEGC,QAFH,CAEY,UAFZ,CAHqC,EAAvC,CAOA,cAAelB,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\n\nimport AuthUserContext from \"./context\";\nimport { withFirebase } from \"../Firebase\";\n\nconst withEmailVerification = Component => {\n  class WithEmailVerification extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = { isSent: false };\n    }\n\n    onSendEmailVerification = () => {\n      this.props.firebase\n        .doSendEmailVerification()\n        .then(() => this.setState({ isSent: true }));\n    };\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            needsEmailVerification(authUser) ? (\n              <div>\n                {this.state.isSent ? (\n                  <p>\n                    E-Mail confirmation sent: Check you E-Mails (Spam folder\n                    included) for a confirmation E-Mail. Refresh this page once\n                    you confirmed your E-Mail.\n                  </p>\n                ) : (\n                  <p>\n                    Verify your E-Mail: Check you E-Mails (Spam folder included)\n                    for a confirmation E-Mail or send another confirmation\n                    E-Mail.\n                  </p>\n                )}\n                <button\n                  type=\"button\"\n                  onClick={this.onSendEmailVerification}\n                  disabled={this.state.isSent}\n                >\n                  Send confirmation E-Mail\n                </button>\n              </div>\n            ) : (\n              <Component {...this.props} />\n            )\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withFirebase(WithEmailVerification);\n};\n\nconst needsEmailVerification = authUser =>\n  authUser &&\n  !authUser.emailVerified &&\n  authUser.providerData\n    .map(provider => provider.providerId)\n    .includes(\"password\");\n\nexport default withEmailVerification;\n"]},"metadata":{},"sourceType":"module"}